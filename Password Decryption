It was a question in Skill Certification in HackerRank
It me almost around 45 min to solve this problem

Problem Statement:
Given string s, which has been encrypted in the following way:
if s[i] is lower case and s[i+1] is uppercase, then swap them and add * after them
if s[i] is digit then replace it with 0 and add the digit to the beginning
Find the original string
Example:
1. s="51Pa*0Lp*0e"
ans  s="aP1pL5e"
2. s="poTaTO"
ans  s="poTaTO"

It took me so long just because of a silly mistake.


Solution:


#include <bits/stdc++.h>

using namespace std;


/*
 * Complete the 'decryptPassword' function below.
 *
 * The function is expected to return a STRING.
 * The function accepts STRING s as parameter.
 */

string decryptPassword(string s) {
    int back;
    back=s.size()-1;
    while(s[back]!='0')
    {
        cout<<back<<" ";
        back--;
        if(back==0)
        {
            break;
        }
    }
    cout<<endl;
    int i=0;
    while(i<s.size())
    {
        if(isdigit(s[i])!=0)
        {
            cout<<s[i]<<" "<< s[back]<<endl;
            if(s[back]!='0')
            {
                i++;
                continue;
            }
            swap(s[i], s[back]);
            s.erase(0, 1);
            back=s.size()-1;
            while(s[back]!='0')
            {
                cout<<back<<" ";
                back--;
                if(back==0)
                {
                    break;
                }
            }
            cout<<endl;
            continue;
        }
        
        if(s[i]>=65 && s[i]<=90)
        {
            if(s[i+1]>=97 && s[i+1]<=122)
            {
                if(s[i+1]=='*')
                {
                swap(s[i], s[i+1]);
                s.erase(i+2, 1);
                i=i+2;
                continue;
                }
            }
        }
        i++;
    }
    return s;
}
int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    string s;
    getline(cin, s);

    string result = decryptPassword(s);
    cout<<"\n"<<result;
    fout << result << "\n";

    fout.close();

    return 0;
}
